# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from execution import execution_pb2 as execution_dot_execution__pb2


class ExecutionStub(object):
    """实盘交易相关的接口定义
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TargetPosition = channel.unary_unary(
                '/Execution/TargetPosition',
                request_serializer=execution_dot_execution__pb2.TargetInfo.SerializeToString,
                response_deserializer=execution_dot_execution__pb2.OrderResult.FromString,
                )
        self.AdjustPosition = channel.unary_unary(
                '/Execution/AdjustPosition',
                request_serializer=execution_dot_execution__pb2.AdjustInfo.SerializeToString,
                response_deserializer=execution_dot_execution__pb2.OrderResult.FromString,
                )
        self.Order = channel.unary_unary(
                '/Execution/Order',
                request_serializer=execution_dot_execution__pb2.OrderInfo.SerializeToString,
                response_deserializer=execution_dot_execution__pb2.OrderResult.FromString,
                )
        self.CheckEquity = channel.unary_unary(
                '/Execution/CheckEquity',
                request_serializer=execution_dot_execution__pb2.CheckEquityInfo.SerializeToString,
                response_deserializer=execution_dot_execution__pb2.CheckEquityResult.FromString,
                )
        self.CheckPosition = channel.unary_unary(
                '/Execution/CheckPosition',
                request_serializer=execution_dot_execution__pb2.CheckPositionInfo.SerializeToString,
                response_deserializer=execution_dot_execution__pb2.CheckPositionResult.FromString,
                )
        self.CheckBasis = channel.unary_unary(
                '/Execution/CheckBasis',
                request_serializer=execution_dot_execution__pb2.CheckBasisInfo.SerializeToString,
                response_deserializer=execution_dot_execution__pb2.CheckBasisResult.FromString,
                )
        self.OrderBasis = channel.unary_unary(
                '/Execution/OrderBasis',
                request_serializer=execution_dot_execution__pb2.OrderBasisInfo.SerializeToString,
                response_deserializer=execution_dot_execution__pb2.OrderResult.FromString,
                )
        self.CheckBasisPosition = channel.unary_unary(
                '/Execution/CheckBasisPosition',
                request_serializer=execution_dot_execution__pb2.CheckBasisPositionInfo.SerializeToString,
                response_deserializer=execution_dot_execution__pb2.CheckBasisPositionResult.FromString,
                )
        self.CheckBasisPositionEquity = channel.unary_unary(
                '/Execution/CheckBasisPositionEquity',
                request_serializer=execution_dot_execution__pb2.CheckBasisPositionInfo.SerializeToString,
                response_deserializer=execution_dot_execution__pb2.CheckBasisPositionEquityResult.FromString,
                )
        self.MultipleOrder = channel.unary_unary(
                '/Execution/MultipleOrder',
                request_serializer=execution_dot_execution__pb2.MultipleOrderInfo.SerializeToString,
                response_deserializer=execution_dot_execution__pb2.OrderResult.FromString,
                )
        self.TwoOrder = channel.unary_unary(
                '/Execution/TwoOrder',
                request_serializer=execution_dot_execution__pb2.TwoOrderInfo.SerializeToString,
                response_deserializer=execution_dot_execution__pb2.OrderResult.FromString,
                )
        self.CheckTwoOrderPosition = channel.unary_unary(
                '/Execution/CheckTwoOrderPosition',
                request_serializer=execution_dot_execution__pb2.CheckTwoOrderPositionInfo.SerializeToString,
                response_deserializer=execution_dot_execution__pb2.CheckBasisPositionResult.FromString,
                )


class ExecutionServicer(object):
    """实盘交易相关的接口定义
    """

    def TargetPosition(self, request, context):
        """基于K线策略的接口

        TODO:implement me!
        设置仓位为某个值(单位为总权益%)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdjustPosition(self, request, context):
        """TODO:implement me!
        增加或者减少仓位（单位为总权益%）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Order(self, request, context):
        """根据数量来下单
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckEquity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckPosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckBasis(self, request, context):
        """基差策略的接口
        查询基差距行情
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OrderBasis(self, request, context):
        """基差下单
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckBasisPosition(self, request, context):
        """基差查询订单
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckBasisPositionEquity(self, request, context):
        """基差同时查询持仓和余额信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MultipleOrder(self, request, context):
        """多个交易对同时下单
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TwoOrder(self, request, context):
        """跨交易所同时下单
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckTwoOrderPosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExecutionServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TargetPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.TargetPosition,
                    request_deserializer=execution_dot_execution__pb2.TargetInfo.FromString,
                    response_serializer=execution_dot_execution__pb2.OrderResult.SerializeToString,
            ),
            'AdjustPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.AdjustPosition,
                    request_deserializer=execution_dot_execution__pb2.AdjustInfo.FromString,
                    response_serializer=execution_dot_execution__pb2.OrderResult.SerializeToString,
            ),
            'Order': grpc.unary_unary_rpc_method_handler(
                    servicer.Order,
                    request_deserializer=execution_dot_execution__pb2.OrderInfo.FromString,
                    response_serializer=execution_dot_execution__pb2.OrderResult.SerializeToString,
            ),
            'CheckEquity': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckEquity,
                    request_deserializer=execution_dot_execution__pb2.CheckEquityInfo.FromString,
                    response_serializer=execution_dot_execution__pb2.CheckEquityResult.SerializeToString,
            ),
            'CheckPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckPosition,
                    request_deserializer=execution_dot_execution__pb2.CheckPositionInfo.FromString,
                    response_serializer=execution_dot_execution__pb2.CheckPositionResult.SerializeToString,
            ),
            'CheckBasis': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckBasis,
                    request_deserializer=execution_dot_execution__pb2.CheckBasisInfo.FromString,
                    response_serializer=execution_dot_execution__pb2.CheckBasisResult.SerializeToString,
            ),
            'OrderBasis': grpc.unary_unary_rpc_method_handler(
                    servicer.OrderBasis,
                    request_deserializer=execution_dot_execution__pb2.OrderBasisInfo.FromString,
                    response_serializer=execution_dot_execution__pb2.OrderResult.SerializeToString,
            ),
            'CheckBasisPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckBasisPosition,
                    request_deserializer=execution_dot_execution__pb2.CheckBasisPositionInfo.FromString,
                    response_serializer=execution_dot_execution__pb2.CheckBasisPositionResult.SerializeToString,
            ),
            'CheckBasisPositionEquity': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckBasisPositionEquity,
                    request_deserializer=execution_dot_execution__pb2.CheckBasisPositionInfo.FromString,
                    response_serializer=execution_dot_execution__pb2.CheckBasisPositionEquityResult.SerializeToString,
            ),
            'MultipleOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.MultipleOrder,
                    request_deserializer=execution_dot_execution__pb2.MultipleOrderInfo.FromString,
                    response_serializer=execution_dot_execution__pb2.OrderResult.SerializeToString,
            ),
            'TwoOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.TwoOrder,
                    request_deserializer=execution_dot_execution__pb2.TwoOrderInfo.FromString,
                    response_serializer=execution_dot_execution__pb2.OrderResult.SerializeToString,
            ),
            'CheckTwoOrderPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckTwoOrderPosition,
                    request_deserializer=execution_dot_execution__pb2.CheckTwoOrderPositionInfo.FromString,
                    response_serializer=execution_dot_execution__pb2.CheckBasisPositionResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Execution', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Execution(object):
    """实盘交易相关的接口定义
    """

    @staticmethod
    def TargetPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Execution/TargetPosition',
            execution_dot_execution__pb2.TargetInfo.SerializeToString,
            execution_dot_execution__pb2.OrderResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdjustPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Execution/AdjustPosition',
            execution_dot_execution__pb2.AdjustInfo.SerializeToString,
            execution_dot_execution__pb2.OrderResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Order(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Execution/Order',
            execution_dot_execution__pb2.OrderInfo.SerializeToString,
            execution_dot_execution__pb2.OrderResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckEquity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Execution/CheckEquity',
            execution_dot_execution__pb2.CheckEquityInfo.SerializeToString,
            execution_dot_execution__pb2.CheckEquityResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Execution/CheckPosition',
            execution_dot_execution__pb2.CheckPositionInfo.SerializeToString,
            execution_dot_execution__pb2.CheckPositionResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckBasis(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Execution/CheckBasis',
            execution_dot_execution__pb2.CheckBasisInfo.SerializeToString,
            execution_dot_execution__pb2.CheckBasisResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OrderBasis(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Execution/OrderBasis',
            execution_dot_execution__pb2.OrderBasisInfo.SerializeToString,
            execution_dot_execution__pb2.OrderResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckBasisPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Execution/CheckBasisPosition',
            execution_dot_execution__pb2.CheckBasisPositionInfo.SerializeToString,
            execution_dot_execution__pb2.CheckBasisPositionResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckBasisPositionEquity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Execution/CheckBasisPositionEquity',
            execution_dot_execution__pb2.CheckBasisPositionInfo.SerializeToString,
            execution_dot_execution__pb2.CheckBasisPositionEquityResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MultipleOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Execution/MultipleOrder',
            execution_dot_execution__pb2.MultipleOrderInfo.SerializeToString,
            execution_dot_execution__pb2.OrderResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TwoOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Execution/TwoOrder',
            execution_dot_execution__pb2.TwoOrderInfo.SerializeToString,
            execution_dot_execution__pb2.OrderResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckTwoOrderPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Execution/CheckTwoOrderPosition',
            execution_dot_execution__pb2.CheckTwoOrderPositionInfo.SerializeToString,
            execution_dot_execution__pb2.CheckBasisPositionResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
